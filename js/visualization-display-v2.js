// Generated by CoffeeScript 1.4.0
(function() {

  jQuery(function($) {
    var Visualization, ajaxurl, cleanHash, modal, modalBg, setHashForTechnologySlug, setPosition, visualizations;
    modal = null;
    modalBg = null;
    ajaxurl = TVAjax.ajaxurl;
    cleanHash = function() {
      return window.location.hash = "";
    };
    setPosition = function(area, ratio) {
      var contentData, positioning;
      contentData = $(area).data();
      positioning = {
        left: (contentData.x1 * ratio) + "px",
        top: (contentData.y1 * ratio) + "px",
        height: (contentData.height * ratio) + "px",
        width: (contentData.width * ratio) + "px"
      };
      return $(area).css(positioning);
    };
    setHashForTechnologySlug = function(technologySlug) {
      var newHash, newHashRegex, oldHash;
      oldHash = window.location.hash;
      newHash = "technology-" + technologySlug;
      window.location.hash = newHash;
      newHashRegex = new RegExp("^#?" + newHash + "$");
      return !oldHash.match(newHashRegex);
    };
    Visualization = (function() {

      Visualization.prototype.destroyContentModal = function() {
        if (modal != null) {
          return modal.fadeOut(function() {
            modal.hide().empty();
            return modalBg.hide().empty();
          });
        }
      };

      Visualization.prototype.scrollToVisualization = function(container) {
        var scrollPosition, visualizationBottom, visualizationTop;
        scrollPosition = $(document).scrollTop();
        visualizationTop = $(container).offset().top;
        visualizationBottom = visualizationTop + $(container).height();
        if (scrollPosition < visualizationTop || scrollPosition > visualizationBottom) {
          return $(document).scrollTop(visualizationTop);
        }
      };

      Visualization.prototype.showContentModal = function(html, callback) {
        var modalPosition;
        if (!html) {
          return;
        }
        if (!modal) {
          modal = $("<div/>", {
            id: "tv-modal"
          }).hide();
          modalBg = $("<div/>", {
            id: "tv-modal-bg"
          }).on("click", cleanHash);
          $("body").append(modal).append(modalBg);
        }
        if (typeof callback === "function") {
          callback();
        }
        modalPosition = ($(document).scrollTop() + 20) + "px";
        modal.html(html).css("top", modalPosition);
        return modal.add(modalBg).fadeIn();
      };

      Visualization.prototype.requestContentModalForTechnologyId = function(technologyId, callback) {
        var requestData,
          _this = this;
        requestData = {
          action: "get_visualization_content",
          contentId: technologyId
        };
        return $.post(ajaxurl, requestData, function(html) {
          return _this.showContentModal(html, callback);
        });
      };

      Visualization.prototype.checkHashAndRequestModalIfNeeded = function(ev) {
        var callback, hash, matches, technology, technologySlug;
        hash = window.location.hash;
        if (!hash || hash === "#") {
          return this.destroyContentModal();
        }
        matches = hash.match(/#technology\-(.*)$/);
        technologySlug = matches != null ? matches[1] : void 0;
        if (technologySlug) {
          technology = $(this.contents).filter("[data-slug=" + technologySlug + "]");
          if (technology) {
            if (!ev) {
              callback = this.scrollToVisualization(this.container);
            }
            return this.requestContentModalForTechnologyId(technology.data("id"), callback);
          }
        }
      };

      Visualization.prototype.setTechnologyModal = function(ev) {
        var technologyId, technologySlug;
        ev.preventDefault();
        technologyId = $(this).data("id");
        technologySlug = $(this).data("slug");
        if (!technologyId) {
          return;
        }
        if (!setHashForTechnologySlug(technologySlug)) {
          return this.requestContentModalForTechnologyId(technologyId);
        }
      };

      function Visualization(container) {
        var visualizationRatio,
          _this = this;
        this.container = container;
        this.contents = $(".tv-map", this.container);
        this.image = $("img", this.container);
        visualizationRatio = this.image.width() / this.image.data("originalWidth");
        this.contents.each(function() {
          return setPosition(this, visualizationRatio);
        });
        this.container.on("click", ".tv-map", this.setTechnologyModal);
        window.onhashchange = function(ev) {
          return _this.checkHashAndRequestModalIfNeeded(ev);
        };
        this.checkHashAndRequestModalIfNeeded();
      }

      return Visualization;

    })();
    visualizations = [];
    return $(".tv-visualization").each(function() {
      return visualizations.push(new Visualization($(this)));
    });
  });

}).call(this);
